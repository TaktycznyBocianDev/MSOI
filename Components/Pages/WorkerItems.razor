@page "/worker-items"
@using MSOI.Models
@using MSOI.Services
@inject WorkerItemService WorkerItemService

<h3>Przedmioty pracownika</h3>

<div class="mb-3">
    <input type="number" placeholder="ID pracownika" @bind="workerId" class="form-control mb-2" />
    <button class="btn btn-primary" @onclick="LoadWorkerItems">Pobierz przedmioty</button>
</div>

<hr />

<h4>Lista przedmiotów</h4>
@if (workerItems == null)
{
    <p><em>Ładowanie...</em></p>
}
else if (!workerItems.Any())
{
    <p>Brak przedmiotów przypisanych do pracownika.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID wydania</th>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Stanowisko</th>
                <th>Nazwa przedmiotu</th>
                <th>Rozmiar</th>
                <th>Kolor</th>
                <th>Data wydania</th>
                <th>Data wymiany</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in workerItems)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Worker_name</td>
                    <td>@item.Worker_surname</td>
                    <td>@item.Position</td>
                    <td>@item.Item_name</td>
                    <td>@item.Size</td>
                    <td>@item.Color</td>
                    <td>@item.Release_date.ToShortDateString()</td>
                    <td>@item.Exchange_date.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private int workerId;
    private List<WorkerItemDTO> workerItems;
    private string errorMessage;

    async Task LoadWorkerItems()
    {
        try
        {
            workerItems = await WorkerItemService.GetItemsByWorker(workerId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Błąd: {ex.Message}";
        }
    }
}
